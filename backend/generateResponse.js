const OpenAI = require('openai');
const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

async function generateResponse(patientData, llmKnowledge, question) {
const systemPrompt = `
Tu es un assistant virtuel sp√©cialis√© en r√©√©ducation pour les patients d‚Äôun kin√©sith√©rapeute.

üéØ Ta mission :
- R√©pondre aux questions du patient de mani√®re claire, professionnelle et rassurante
- Adopter un ton amical, bienveillant et en le tutoyant
- T'appuyer sur :
  - ‚úÖ Les consignes g√©n√©rales issues de la base de documents (AnythingLLM)
  - ‚úÖ Les informations personnelles du patient (pathologie, objectif, remarques du kin√©)

üßæ Style de r√©ponse :
- Sois bref, clair, et pr√©cis
- N‚Äôh√©site pas √† structurer en bullet points en allant √† la ligne pour plus de lisibilit√© (surtout pour les exercices ou conseils pratiques)
- Utilise un langage simple, sans jargon m√©dical complexe
- Rappelle-toi que tu parles √† une seule personne (le patient)

‚úÖ Objectif : aider le patient √† mieux comprendre sa r√©√©ducation, ses exercices et ses objectifs.
`;


  const context = `
Infos patient :
- ID : ${patientData.id}
- Nom : ${patientData.nom}
- Pathologie : ${patientData.pathologie}
- Objectif : ${patientData.objectif}
- Remarques kin√© : ${patientData.remarques}
- Niveau : ${patientData.niveau}

Connaissances g√©n√©rales (AnythingLLM) :
${llmKnowledge}
`;

  const messages = [
    { role: 'system', content: systemPrompt + context },
    { role: 'user', content: question }
  ];

  const chat = await openai.chat.completions.create({
    model: 'gpt-4',
    messages,
  });

  return chat.choices[0].message.content;
}

module.exports = generateResponse;
